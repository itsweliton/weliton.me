---
import { Image } from 'astro:assets';
const { title, releaseDate, director, rating, posterUrl, posterAlt, genres, movieUrl } = Astro.props;
const formattedDate = new Date(releaseDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
---

<div class="mb-6">
  <div class="poster-container animate mb-4 m-2">
		<div class="poster-bg"></div>
		<div class="poster-frame">
			<Image class="image" src={posterUrl} alt={posterAlt} width={150} height={225} />
			<div class="image-overlay"></div>
		</div>
	</div>
	<div class="text-sm font-light w-[150px]">
    <p class="text-slate-50">{title}</p>
    <p class="text-xs mb-1">{director}</p>
    <span class="font-mono capitalize text-xs rounded bg-zinc-800	py-0.5 px-1">{rating} ⭐️</span>
    <p>{formattedDate}</p>
  </div>
</div>


<style lang="scss">
$poster-width: 150px;
$poster-aspect-ratio: 1.5;

/*
* This first section fixes an error on the animation without the poster-bg, the borders get a weird black effect if there's a dark background on the page.
*/
.poster-container {
	position: relative;
	transition: transform 0.3s ease;
	transform-origin: center center;
	transform-style: preserve-3d;
	&.animate:hover {
		transform: perspective(800px) rotateZ(5deg) rotateY(-5deg) translateZ(10px);
	}
}
.poster-bg {
	width: calc($poster-width + 12px);
	height: calc($poster-width * $poster-aspect-ratio + 12px);
	position: absolute;
	top: -6px;
	left:-6px;
	background-color: #fff;
	z-index: 1;
}

// --------------------------------------------- //

.poster-frame {
	box-sizing: border-box;
	background-color: #f4f4f4;
	padding: 7px;
	box-shadow: 0px 0px 4px 3px #0000000D inset;
	position: relative;
	width: $poster-width;
	height: calc($poster-width * $poster-aspect-ratio);
	z-index: 2;
	img {
		display: block;
		width: 100%;
		height: 100%;
	}
	&::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(206.68deg, 
			rgba(255, 255, 255, 0.3) 16.72%, 
			rgba(255, 255, 255, 0.05) 60.78%, 
			rgba(255, 255, 255, 0) 81.27%);
		clip-path: polygon(100% 0, 0 0, 0 100%);
	}

	&::before {
		content: '';
		position: absolute;
		top: -6px;
		left: -6px;
		right: -6px;
		bottom: -6px;
		border: 6px solid #f8f8f8;
		z-index: -1;
		box-shadow: -10px 8px 8px 0px #00000014;
	}
}

.image-overlay {
	position: absolute;
	top: 7px;
	left: 7px;
	right: 7px;
	bottom: 7px;
	z-index: 3;
	background: linear-gradient(270deg, 
		rgba(255, 255, 255, 0.12) 0%, 
		rgba(230, 230, 230, 0.0665779) 2.74%,
		rgba(218, 218, 218, 0.04) 7.84%, 
		rgba(143, 143, 143, 0) 16.5%, 
		rgba(131, 131, 131, 0.11) 49.85%, 
		rgba(0, 0, 0, 0.13) 50.06%, 
		rgba(115, 115, 115, 0.04) 50.26%, 
		rgba(255, 255, 255, 0.02) 95.48%, 
		rgba(0, 0, 0, 0.06) 100%),
		linear-gradient(360deg, 
		rgba(255, 255, 255, 0.12) 0%, 
		rgba(230, 230, 230, 0.0665779) 2.74%,
		rgba(218, 218, 218, 0.04) 7.84%, 
		rgba(143, 143, 143, 0) 16.5%, 
		rgba(131, 131, 131, 0.11) 49.85%, 
		rgba(0, 0, 0, 0.12) 50.06%, 
		rgba(115, 115, 115, 0.02) 50.26%, 
		rgba(255, 255, 255, 0.04) 95.48%, 
		rgba(0, 0, 0, 0.06) 100%);
	pointer-events: none;
}
</style>